{"ast":null,"code":"var _jsxFileName = \"/home/axelquartz/repos/react_playground/src/components/NavBar.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\n\n// CHILD\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NavBar() {\n  _s();\n  let [inputValue, setInputValue] = useState(\"\");\n  let [displayValue, setDisplayValue] = useState(\"\");\n  function printLetters(e) {\n    setDisplayValue(inputValue);\n  }\n  function reset() {\n    setDisplayValue(\"aa\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Type your words\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: displayValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: printLetters,\n      children: \"Get letters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(NavBar, \"lnn84hm8Uq5wB2N1WThOa3FQ+N0=\");\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","NavBar","_s","inputValue","setInputValue","displayValue","setDisplayValue","printLetters","e","reset","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/home/axelquartz/repos/react_playground/src/components/NavBar.js"],"sourcesContent":["import { useState } from \"react\";\n\n// CHILD\nfunction NavBar() {\n  let [inputValue, setInputValue] = useState(\"\");\n  let [displayValue, setDisplayValue] = useState(\"\");\n  function printLetters(e) {\n    setDisplayValue(inputValue);\n  }\n  function reset() {\n    setDisplayValue(\"aa\");\n  }\n  return (\n    <div>\n      <label>Type your words</label>\n      <input type=\"text\" value={inputValue} onChange={(e) => setInputValue(e.target.value)} />\n      <h3>{displayValue}</h3>\n      <button onClick={printLetters}>Get letters</button>\n      <button onClick={reset}>Reset</button>\n    </div>\n  );\n}\n\nexport default NavBar;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,IAAI,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,IAAI,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,SAASS,YAAYA,CAACC,CAAC,EAAE;IACvBF,eAAe,CAACH,UAAU,CAAC;EAC7B;EACA,SAASM,KAAKA,CAAA,EAAG;IACfH,eAAe,CAAC,IAAI,CAAC;EACvB;EACA,oBACEN,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAO;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC9Bd,OAAA;MAAOe,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEb,UAAW;MAACc,QAAQ,EAAGT,CAAC,IAAKJ,aAAa,CAACI,CAAC,CAACU,MAAM,CAACF,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxFd,OAAA;MAAAU,QAAA,EAAKL;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBd,OAAA;MAAQmB,OAAO,EAAEZ,YAAa;MAAAG,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnDd,OAAA;MAAQmB,OAAO,EAAEV,KAAM;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAACZ,EAAA,CAlBQD,MAAM;AAAAmB,EAAA,GAANnB,MAAM;AAoBf,eAAeA,MAAM;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}